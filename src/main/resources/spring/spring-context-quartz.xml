<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"	
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">
	
	<!-- ================================================ -->
	<!-- quartz isClustered = false                       -->
	<!-- ================================================ -->
    <bean id="quartzSchedulerFactory" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<!--必须，QuartzScheduler 延时启动60秒，应用启动后 QuartzScheduler 再启动-->
        <property name="startupDelay" value="0"/>
        <property name="JobFactory">
            <bean class="org.springframework.scheduling.quartz.SpringBeanJobFactory" />
        </property>
        <property name="triggers">
            <list>
				<!-- <ref bean="sampleJobV2Trigger" /> -->
				<!-- <ref bean="sampleJobV3Trigger" /> -->
            </list>
        </property>
    </bean>
    
    <!-- <bean id="sampleJobV2Trigger" class="org.springframework.scheduling.quartz.CronTriggerBean">  --> <!-- quartz-1.8以前的配置 -->
    <bean id="sampleJobV2Trigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean"> <!-- quartz-2.x的配置 -->
        <!-- <property name="cronExpression" value="0 30 0/1 * * ?" /> -->   <!-- every 1hour -->
        <!-- <property name="cronExpression" value="s m h D M W" /> -->
        <property name="cronExpression" value="0/5 * * * 1 ?" />
        <property name="jobDetail">
            <bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
                <property name="targetObject" ref="sampleJobV2" />
                <property name="targetMethod" value="execute" />
                <property name="concurrent" value="false" />
            </bean>
        </property>
    </bean>
    
    <bean id="sampleJobV3Trigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean"> <!-- quartz-2.x的配置 -->
        <property name="cronExpression" value="0/5 * * * 1 ?" />
        <property name="jobDetail" ref="sampleJobV3" />
    </bean>

	<!-- ================================================ -->
	<!-- quartz isClustered = true                        -->
	<!-- ================================================ -->
	<bean id="quartzSchedulerFactoryDB" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
    	<property name="dataSource" ref="dataSource"/>
    	<property name="applicationContextSchedulerContextKey" value="applicationContextKey"/>
    	<property name="configLocation" value="classpath:quartz.properties"/>
		<!--必须，QuartzScheduler 延时启动60秒，应用启动后 QuartzScheduler 再启动-->
        <property name="startupDelay" value="0"/>
        <property name="JobFactory">
            <bean class="org.springframework.scheduling.quartz.SpringBeanJobFactory" />
        </property>
        <property name="triggers">
            <list>
				<!-- <ref bean="sampleJobV4Trigger" /> -->
            </list>
        </property>
    </bean>
    
    <bean id="sampleJobV4Trigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">       
        <property name="cronExpression" value="0/5 * * * 1 ?"/>
        <property name="jobDetail">
            <bean class="org.springframework.scheduling.quartz.JobDetailFactoryBean"> 
	      		<property name="jobClass" value="com.kelvem.sample.quartz.SampleJobV4"/><!-- extends QuartzJobBean -->
		        <property name="durability" value="true"/>
            </bean>
        </property>
    </bean>
</beans>